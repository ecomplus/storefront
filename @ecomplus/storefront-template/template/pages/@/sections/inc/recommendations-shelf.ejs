<%
const { title, showcaseType } = opt
const relatedProducts = _.state.related_products && _.state.related_products.find(relatedProducts => {
  return relatedProducts.product_ids.length
})
if (relatedProducts && showcaseType === 'related') {
  try {
    const productIds = _.state.related_products[0].product_ids
    let items = []
    if (Array.isArray(productIds) && productIds.length) {
      const search = new _.EcomSearch()
      await search.setProductIds(productIds).fetch()
      items = search.getItems()
    }
    %>
    <%- await include('@/sections/inc/products-carousel', {
      _, opt: { items, title, showcaseType }
    }) %>
    <% 
  } catch (err) {
      console.error(err)
  }
} else if(showcaseType) {
  const url = `/products/${_.state._id}/${showcaseType}.json`
  try {
    const { data } = await _.ecomClient.graphs({ url })
    const productIds = _.ecomUtils.recommendedIds(data)
    let items = []
    if (Array.isArray(productIds) && productIds.length) {
      const search = new _.EcomSearch()
      await search.setProductIds(productIds).fetch()
      items = search.getItems()
    }
    %>
    <%- await include('@/sections/inc/products-carousel', {
      _, opt: { items, title, showcaseType }
    }) %>
    <%
  } catch (err) {
    console.error(err)
  }
}
%>
